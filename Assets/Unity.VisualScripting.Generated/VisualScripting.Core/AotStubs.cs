#pragma warning disable 219
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unity.VisualScripting.Generated.Aot
{
	
	
	// --------------- Setting Stubs
	// string.op_Equality
	// string.op_Inequality
	// float.op_Equality
	// float.op_Inequality
	// float.op_LessThan
	// float.op_GreaterThan
	// float.op_LessThanOrEqual
	// float.op_GreaterThanOrEqual
	// UnityEngine.AI.NavMeshAgent.op_Implicit
	// UnityEngine.AI.NavMeshAgent.op_Equality
	// UnityEngine.AI.NavMeshAgent.op_Inequality
	// UnityEngine.AI.NavMeshObstacle.op_Implicit
	// UnityEngine.AI.NavMeshObstacle.op_Equality
	// UnityEngine.AI.NavMeshObstacle.op_Inequality
	// UnityEngine.AI.OffMeshLink.op_Implicit
	// UnityEngine.AI.OffMeshLink.op_Equality
	// UnityEngine.AI.OffMeshLink.op_Inequality
	// UnityEngine.AI.NavMeshData.op_Implicit
	// UnityEngine.AI.NavMeshData.op_Equality
	// UnityEngine.AI.NavMeshData.op_Inequality
	// UnityEngine.Animator.op_Implicit
	// UnityEngine.Animator.op_Equality
	// UnityEngine.Animator.op_Inequality
	// UnityEngine.Animation.op_Implicit
	// UnityEngine.Animation.op_Equality
	// UnityEngine.Animation.op_Inequality
	// UnityEngine.AnimationClip.op_Implicit
	// UnityEngine.AnimationClip.op_Equality
	// UnityEngine.AnimationClip.op_Inequality
	// UnityEngine.AnimatorOverrideController.op_Implicit
	// UnityEngine.AnimatorOverrideController.op_Equality
	// UnityEngine.AnimatorOverrideController.op_Inequality
	// UnityEngine.Avatar.op_Implicit
	// UnityEngine.Avatar.op_Equality
	// UnityEngine.Avatar.op_Inequality
	// UnityEngine.AvatarMask.op_Implicit
	// UnityEngine.AvatarMask.op_Equality
	// UnityEngine.AvatarMask.op_Inequality
	// UnityEngine.Motion.op_Implicit
	// UnityEngine.Motion.op_Equality
	// UnityEngine.Motion.op_Inequality
	// UnityEngine.RuntimeAnimatorController.op_Implicit
	// UnityEngine.RuntimeAnimatorController.op_Equality
	// UnityEngine.RuntimeAnimatorController.op_Inequality
	// UnityEngine.Animations.AimConstraint.op_Implicit
	// UnityEngine.Animations.AimConstraint.op_Equality
	// UnityEngine.Animations.AimConstraint.op_Inequality
	// UnityEngine.Animations.PositionConstraint.op_Implicit
	// UnityEngine.Animations.PositionConstraint.op_Equality
	// UnityEngine.Animations.PositionConstraint.op_Inequality
	// UnityEngine.Animations.RotationConstraint.op_Implicit
	// UnityEngine.Animations.RotationConstraint.op_Equality
	// UnityEngine.Animations.RotationConstraint.op_Inequality
	// UnityEngine.Animations.ScaleConstraint.op_Implicit
	// UnityEngine.Animations.ScaleConstraint.op_Equality
	// UnityEngine.Animations.ScaleConstraint.op_Inequality
	// UnityEngine.Animations.LookAtConstraint.op_Implicit
	// UnityEngine.Animations.LookAtConstraint.op_Equality
	// UnityEngine.Animations.LookAtConstraint.op_Inequality
	// UnityEngine.Animations.ParentConstraint.op_Implicit
	// UnityEngine.Animations.ParentConstraint.op_Equality
	// UnityEngine.Animations.ParentConstraint.op_Inequality
	// UnityEngine.AssetBundle.op_Implicit
	// UnityEngine.AssetBundle.op_Equality
	// UnityEngine.AssetBundle.op_Inequality
	// UnityEngine.AssetBundleManifest.op_Implicit
	// UnityEngine.AssetBundleManifest.op_Equality
	// UnityEngine.AssetBundleManifest.op_Inequality
	// UnityEngine.AudioSource.op_Implicit
	// UnityEngine.AudioSource.op_Equality
	// UnityEngine.AudioSource.op_Inequality
	// UnityEngine.AudioLowPassFilter.op_Implicit
	// UnityEngine.AudioLowPassFilter.op_Equality
	// UnityEngine.AudioLowPassFilter.op_Inequality
	// UnityEngine.AudioHighPassFilter.op_Implicit
	// UnityEngine.AudioHighPassFilter.op_Equality
	// UnityEngine.AudioHighPassFilter.op_Inequality
	// UnityEngine.AudioReverbFilter.op_Implicit
	// UnityEngine.AudioReverbFilter.op_Equality
	// UnityEngine.AudioReverbFilter.op_Inequality
	// UnityEngine.AudioClip.op_Implicit
	// UnityEngine.AudioClip.op_Equality
	// UnityEngine.AudioClip.op_Inequality
	// UnityEngine.AudioBehaviour.op_Implicit
	// UnityEngine.AudioBehaviour.op_Equality
	// UnityEngine.AudioBehaviour.op_Inequality
	// UnityEngine.AudioListener.op_Implicit
	// UnityEngine.AudioListener.op_Equality
	// UnityEngine.AudioListener.op_Inequality
	// UnityEngine.AudioReverbZone.op_Implicit
	// UnityEngine.AudioReverbZone.op_Equality
	// UnityEngine.AudioReverbZone.op_Inequality
	// UnityEngine.AudioDistortionFilter.op_Implicit
	// UnityEngine.AudioDistortionFilter.op_Equality
	// UnityEngine.AudioDistortionFilter.op_Inequality
	// UnityEngine.AudioEchoFilter.op_Implicit
	// UnityEngine.AudioEchoFilter.op_Equality
	// UnityEngine.AudioEchoFilter.op_Inequality
	// UnityEngine.AudioChorusFilter.op_Implicit
	// UnityEngine.AudioChorusFilter.op_Equality
	// UnityEngine.AudioChorusFilter.op_Inequality
	// UnityEngine.WebCamTexture.op_Implicit
	// UnityEngine.WebCamTexture.op_Equality
	// UnityEngine.WebCamTexture.op_Inequality
	// UnityEngine.Audio.AudioMixer.op_Implicit
	// UnityEngine.Audio.AudioMixer.op_Equality
	// UnityEngine.Audio.AudioMixer.op_Inequality
	// UnityEngine.Audio.AudioMixerGroup.op_Implicit
	// UnityEngine.Audio.AudioMixerGroup.op_Equality
	// UnityEngine.Audio.AudioMixerGroup.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
	// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
	// UnityEngine.Cloth.op_Implicit
	// UnityEngine.Cloth.op_Equality
	// UnityEngine.Cloth.op_Inequality
	// UnityEngine.Camera.op_Implicit
	// UnityEngine.Camera.op_Equality
	// UnityEngine.Camera.op_Inequality
	// UnityEngine.FlareLayer.op_Implicit
	// UnityEngine.FlareLayer.op_Equality
	// UnityEngine.FlareLayer.op_Inequality
	// UnityEngine.ReflectionProbe.op_Implicit
	// UnityEngine.ReflectionProbe.op_Equality
	// UnityEngine.ReflectionProbe.op_Inequality
	// UnityEngine.Bounds.op_Equality
	// UnityEngine.Bounds.op_Inequality
	// UnityEngine.Rect.op_Inequality
	// UnityEngine.Rect.op_Equality
	// UnityEngine.LightingSettings.op_Implicit
	// UnityEngine.LightingSettings.op_Equality
	// UnityEngine.LightingSettings.op_Inequality
	// UnityEngine.BillboardAsset.op_Implicit
	// UnityEngine.BillboardAsset.op_Equality
	// UnityEngine.BillboardAsset.op_Inequality
	// UnityEngine.BillboardRenderer.op_Implicit
	// UnityEngine.BillboardRenderer.op_Equality
	// UnityEngine.BillboardRenderer.op_Inequality
	// UnityEngine.LightmapSettings.op_Implicit
	// UnityEngine.LightmapSettings.op_Equality
	// UnityEngine.LightmapSettings.op_Inequality
	// UnityEngine.LightProbes.op_Implicit
	// UnityEngine.LightProbes.op_Equality
	// UnityEngine.LightProbes.op_Inequality
	// UnityEngine.QualitySettings.op_Implicit
	// UnityEngine.QualitySettings.op_Equality
	// UnityEngine.QualitySettings.op_Inequality
	// UnityEngine.Mesh.op_Implicit
	// UnityEngine.Mesh.op_Equality
	// UnityEngine.Mesh.op_Inequality
	// UnityEngine.Renderer.op_Implicit
	// UnityEngine.Renderer.op_Equality
	// UnityEngine.Renderer.op_Inequality
	// UnityEngine.Projector.op_Implicit
	// UnityEngine.Projector.op_Equality
	// UnityEngine.Projector.op_Inequality
	// UnityEngine.Shader.op_Implicit
	// UnityEngine.Shader.op_Equality
	// UnityEngine.Shader.op_Inequality
	// UnityEngine.TrailRenderer.op_Implicit
	// UnityEngine.TrailRenderer.op_Equality
	// UnityEngine.TrailRenderer.op_Inequality
	// UnityEngine.LineRenderer.op_Implicit
	// UnityEngine.LineRenderer.op_Equality
	// UnityEngine.LineRenderer.op_Inequality
	// UnityEngine.RenderSettings.op_Implicit
	// UnityEngine.RenderSettings.op_Equality
	// UnityEngine.RenderSettings.op_Inequality
	// UnityEngine.Material.op_Implicit
	// UnityEngine.Material.op_Equality
	// UnityEngine.Material.op_Inequality
	// UnityEngine.OcclusionPortal.op_Implicit
	// UnityEngine.OcclusionPortal.op_Equality
	// UnityEngine.OcclusionPortal.op_Inequality
	// UnityEngine.OcclusionArea.op_Implicit
	// UnityEngine.OcclusionArea.op_Equality
	// UnityEngine.OcclusionArea.op_Inequality
	// UnityEngine.Flare.op_Implicit
	// UnityEngine.Flare.op_Equality
	// UnityEngine.Flare.op_Inequality
	// UnityEngine.LensFlare.op_Implicit
	// UnityEngine.LensFlare.op_Equality
	// UnityEngine.LensFlare.op_Inequality
	// UnityEngine.Light.op_Implicit
	// UnityEngine.Light.op_Equality
	// UnityEngine.Light.op_Inequality
	// UnityEngine.Skybox.op_Implicit
	// UnityEngine.Skybox.op_Equality
	// UnityEngine.Skybox.op_Inequality
	// UnityEngine.MeshFilter.op_Implicit
	// UnityEngine.MeshFilter.op_Equality
	// UnityEngine.MeshFilter.op_Inequality
	// UnityEngine.LightProbeProxyVolume.op_Implicit
	// UnityEngine.LightProbeProxyVolume.op_Equality
	// UnityEngine.LightProbeProxyVolume.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.op_Implicit
	// UnityEngine.SkinnedMeshRenderer.op_Equality
	// UnityEngine.SkinnedMeshRenderer.op_Inequality
	// UnityEngine.MeshRenderer.op_Implicit
	// UnityEngine.MeshRenderer.op_Equality
	// UnityEngine.MeshRenderer.op_Inequality
	// UnityEngine.LightProbeGroup.op_Implicit
	// UnityEngine.LightProbeGroup.op_Equality
	// UnityEngine.LightProbeGroup.op_Inequality
	// UnityEngine.LODGroup.op_Implicit
	// UnityEngine.LODGroup.op_Equality
	// UnityEngine.LODGroup.op_Inequality
	// UnityEngine.Texture.op_Implicit
	// UnityEngine.Texture.op_Equality
	// UnityEngine.Texture.op_Inequality
	// UnityEngine.Texture2D.op_Implicit
	// UnityEngine.Texture2D.op_Equality
	// UnityEngine.Texture2D.op_Inequality
	// UnityEngine.Cubemap.op_Implicit
	// UnityEngine.Cubemap.op_Equality
	// UnityEngine.Cubemap.op_Inequality
	// UnityEngine.Texture3D.op_Implicit
	// UnityEngine.Texture3D.op_Equality
	// UnityEngine.Texture3D.op_Inequality
	// UnityEngine.Texture2DArray.op_Implicit
	// UnityEngine.Texture2DArray.op_Equality
	// UnityEngine.Texture2DArray.op_Inequality
	// UnityEngine.CubemapArray.op_Implicit
	// UnityEngine.CubemapArray.op_Equality
	// UnityEngine.CubemapArray.op_Inequality
	// UnityEngine.SparseTexture.op_Implicit
	// UnityEngine.SparseTexture.op_Equality
	// UnityEngine.SparseTexture.op_Inequality
	// UnityEngine.RenderTexture.op_Implicit
	// UnityEngine.RenderTexture.op_Equality
	// UnityEngine.RenderTexture.op_Inequality
	// UnityEngine.CustomRenderTexture.op_Implicit
	// UnityEngine.CustomRenderTexture.op_Equality
	// UnityEngine.CustomRenderTexture.op_Inequality
	// UnityEngine.Color.op_Addition
	// UnityEngine.Color.op_Subtraction
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Division
	// UnityEngine.Color.op_Equality
	// UnityEngine.Color.op_Inequality
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Equality
	// UnityEngine.Matrix4x4.op_Inequality
	// UnityEngine.Vector3.op_Addition
	// UnityEngine.Vector3.op_Subtraction
	// UnityEngine.Vector3.op_UnaryNegation
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Division
	// UnityEngine.Vector3.op_Equality
	// UnityEngine.Vector3.op_Inequality
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Equality
	// UnityEngine.Quaternion.op_Inequality
	// UnityEngine.Vector2.op_Addition
	// UnityEngine.Vector2.op_Subtraction
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_UnaryNegation
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Equality
	// UnityEngine.Vector2.op_Inequality
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector4.op_Addition
	// UnityEngine.Vector4.op_Subtraction
	// UnityEngine.Vector4.op_UnaryNegation
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Division
	// UnityEngine.Vector4.op_Equality
	// UnityEngine.Vector4.op_Inequality
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Behaviour.op_Implicit
	// UnityEngine.Behaviour.op_Equality
	// UnityEngine.Behaviour.op_Inequality
	// UnityEngine.Component.op_Implicit
	// UnityEngine.Component.op_Equality
	// UnityEngine.Component.op_Inequality
	// UnityEngine.GameObject.op_Implicit
	// UnityEngine.GameObject.op_Equality
	// UnityEngine.GameObject.op_Inequality
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.MonoBehaviour.op_Implicit
	// UnityEngine.MonoBehaviour.op_Equality
	// UnityEngine.MonoBehaviour.op_Inequality
	// UnityEngine.ScriptableObject.op_Implicit
	// UnityEngine.ScriptableObject.op_Equality
	// UnityEngine.ScriptableObject.op_Inequality
	// UnityEngine.TextAsset.op_Implicit
	// UnityEngine.TextAsset.op_Equality
	// UnityEngine.TextAsset.op_Inequality
	// UnityEngine.Object.op_Implicit
	// UnityEngine.Object.op_Equality
	// UnityEngine.Object.op_Inequality
	// UnityEngine.ComputeShader.op_Implicit
	// UnityEngine.ComputeShader.op_Equality
	// UnityEngine.ComputeShader.op_Inequality
	// UnityEngine.ShaderVariantCollection.op_Implicit
	// UnityEngine.ShaderVariantCollection.op_Equality
	// UnityEngine.ShaderVariantCollection.op_Inequality
	// UnityEngine.RectTransform.op_Implicit
	// UnityEngine.RectTransform.op_Equality
	// UnityEngine.RectTransform.op_Inequality
	// UnityEngine.Transform.op_Implicit
	// UnityEngine.Transform.op_Equality
	// UnityEngine.Transform.op_Inequality
	// UnityEngine.SpriteRenderer.op_Implicit
	// UnityEngine.SpriteRenderer.op_Equality
	// UnityEngine.SpriteRenderer.op_Inequality
	// UnityEngine.Sprite.op_Implicit
	// UnityEngine.Sprite.op_Equality
	// UnityEngine.Sprite.op_Inequality
	// UnityEngine.U2D.SpriteAtlas.op_Implicit
	// UnityEngine.U2D.SpriteAtlas.op_Equality
	// UnityEngine.U2D.SpriteAtlas.op_Inequality
	// UnityEngine.SceneManagement.Scene.op_Equality
	// UnityEngine.SceneManagement.Scene.op_Inequality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
	// UnityEngine.Rendering.GraphicsSettings.op_Implicit
	// UnityEngine.Rendering.GraphicsSettings.op_Equality
	// UnityEngine.Rendering.GraphicsSettings.op_Inequality
	// UnityEngine.Rendering.SortingGroup.op_Implicit
	// UnityEngine.Rendering.SortingGroup.op_Equality
	// UnityEngine.Rendering.SortingGroup.op_Inequality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
	// UnityEngine.Playables.PlayableDirector.op_Implicit
	// UnityEngine.Playables.PlayableDirector.op_Equality
	// UnityEngine.Playables.PlayableDirector.op_Inequality
	// UnityEngine.GUISkin.op_Implicit
	// UnityEngine.GUISkin.op_Equality
	// UnityEngine.GUISkin.op_Inequality
	// UnityEngine.ParticleSystem.op_Implicit
	// UnityEngine.ParticleSystem.op_Equality
	// UnityEngine.ParticleSystem.op_Inequality
	// UnityEngine.ParticleSystemRenderer.op_Implicit
	// UnityEngine.ParticleSystemRenderer.op_Equality
	// UnityEngine.ParticleSystemRenderer.op_Inequality
	// UnityEngine.ParticleSystemForceField.op_Implicit
	// UnityEngine.ParticleSystemForceField.op_Equality
	// UnityEngine.ParticleSystemForceField.op_Inequality
	// UnityEngine.ArticulationBody.op_Implicit
	// UnityEngine.ArticulationBody.op_Equality
	// UnityEngine.ArticulationBody.op_Inequality
	// UnityEngine.PhysicMaterial.op_Implicit
	// UnityEngine.PhysicMaterial.op_Equality
	// UnityEngine.PhysicMaterial.op_Inequality
	// UnityEngine.Rigidbody.op_Implicit
	// UnityEngine.Rigidbody.op_Equality
	// UnityEngine.Rigidbody.op_Inequality
	// UnityEngine.Collider.op_Implicit
	// UnityEngine.Collider.op_Equality
	// UnityEngine.Collider.op_Inequality
	// UnityEngine.CharacterController.op_Implicit
	// UnityEngine.CharacterController.op_Equality
	// UnityEngine.CharacterController.op_Inequality
	// UnityEngine.MeshCollider.op_Implicit
	// UnityEngine.MeshCollider.op_Equality
	// UnityEngine.MeshCollider.op_Inequality
	// UnityEngine.CapsuleCollider.op_Implicit
	// UnityEngine.CapsuleCollider.op_Equality
	// UnityEngine.CapsuleCollider.op_Inequality
	// UnityEngine.BoxCollider.op_Implicit
	// UnityEngine.BoxCollider.op_Equality
	// UnityEngine.BoxCollider.op_Inequality
	// UnityEngine.SphereCollider.op_Implicit
	// UnityEngine.SphereCollider.op_Equality
	// UnityEngine.SphereCollider.op_Inequality
	// UnityEngine.ConstantForce.op_Implicit
	// UnityEngine.ConstantForce.op_Equality
	// UnityEngine.ConstantForce.op_Inequality
	// UnityEngine.Joint.op_Implicit
	// UnityEngine.Joint.op_Equality
	// UnityEngine.Joint.op_Inequality
	// UnityEngine.HingeJoint.op_Implicit
	// UnityEngine.HingeJoint.op_Equality
	// UnityEngine.HingeJoint.op_Inequality
	// UnityEngine.SpringJoint.op_Implicit
	// UnityEngine.SpringJoint.op_Equality
	// UnityEngine.SpringJoint.op_Inequality
	// UnityEngine.FixedJoint.op_Implicit
	// UnityEngine.FixedJoint.op_Equality
	// UnityEngine.FixedJoint.op_Inequality
	// UnityEngine.CharacterJoint.op_Implicit
	// UnityEngine.CharacterJoint.op_Equality
	// UnityEngine.CharacterJoint.op_Inequality
	// UnityEngine.ConfigurableJoint.op_Implicit
	// UnityEngine.ConfigurableJoint.op_Equality
	// UnityEngine.ConfigurableJoint.op_Inequality
	// UnityEngine.RaycastHit2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Equality
	// UnityEngine.Rigidbody2D.op_Inequality
	// UnityEngine.Collider2D.op_Implicit
	// UnityEngine.Collider2D.op_Equality
	// UnityEngine.Collider2D.op_Inequality
	// UnityEngine.CustomCollider2D.op_Implicit
	// UnityEngine.CustomCollider2D.op_Equality
	// UnityEngine.CustomCollider2D.op_Inequality
	// UnityEngine.CircleCollider2D.op_Implicit
	// UnityEngine.CircleCollider2D.op_Equality
	// UnityEngine.CircleCollider2D.op_Inequality
	// UnityEngine.CapsuleCollider2D.op_Implicit
	// UnityEngine.CapsuleCollider2D.op_Equality
	// UnityEngine.CapsuleCollider2D.op_Inequality
	// UnityEngine.EdgeCollider2D.op_Implicit
	// UnityEngine.EdgeCollider2D.op_Equality
	// UnityEngine.EdgeCollider2D.op_Inequality
	// UnityEngine.BoxCollider2D.op_Implicit
	// UnityEngine.BoxCollider2D.op_Equality
	// UnityEngine.BoxCollider2D.op_Inequality
	// UnityEngine.PolygonCollider2D.op_Implicit
	// UnityEngine.PolygonCollider2D.op_Equality
	// UnityEngine.PolygonCollider2D.op_Inequality
	// UnityEngine.CompositeCollider2D.op_Implicit
	// UnityEngine.CompositeCollider2D.op_Equality
	// UnityEngine.CompositeCollider2D.op_Inequality
	// UnityEngine.Joint2D.op_Implicit
	// UnityEngine.Joint2D.op_Equality
	// UnityEngine.Joint2D.op_Inequality
	// UnityEngine.AnchoredJoint2D.op_Implicit
	// UnityEngine.AnchoredJoint2D.op_Equality
	// UnityEngine.AnchoredJoint2D.op_Inequality
	// UnityEngine.SpringJoint2D.op_Implicit
	// UnityEngine.SpringJoint2D.op_Equality
	// UnityEngine.SpringJoint2D.op_Inequality
	// UnityEngine.DistanceJoint2D.op_Implicit
	// UnityEngine.DistanceJoint2D.op_Equality
	// UnityEngine.DistanceJoint2D.op_Inequality
	// UnityEngine.FrictionJoint2D.op_Implicit
	// UnityEngine.FrictionJoint2D.op_Equality
	// UnityEngine.FrictionJoint2D.op_Inequality
	// UnityEngine.HingeJoint2D.op_Implicit
	// UnityEngine.HingeJoint2D.op_Equality
	// UnityEngine.HingeJoint2D.op_Inequality
	// UnityEngine.RelativeJoint2D.op_Implicit
	// UnityEngine.RelativeJoint2D.op_Equality
	// UnityEngine.RelativeJoint2D.op_Inequality
	// UnityEngine.SliderJoint2D.op_Implicit
	// UnityEngine.SliderJoint2D.op_Equality
	// UnityEngine.SliderJoint2D.op_Inequality
	// UnityEngine.TargetJoint2D.op_Implicit
	// UnityEngine.TargetJoint2D.op_Equality
	// UnityEngine.TargetJoint2D.op_Inequality
	// UnityEngine.FixedJoint2D.op_Implicit
	// UnityEngine.FixedJoint2D.op_Equality
	// UnityEngine.FixedJoint2D.op_Inequality
	// UnityEngine.WheelJoint2D.op_Implicit
	// UnityEngine.WheelJoint2D.op_Equality
	// UnityEngine.WheelJoint2D.op_Inequality
	// UnityEngine.Effector2D.op_Implicit
	// UnityEngine.Effector2D.op_Equality
	// UnityEngine.Effector2D.op_Inequality
	// UnityEngine.AreaEffector2D.op_Implicit
	// UnityEngine.AreaEffector2D.op_Equality
	// UnityEngine.AreaEffector2D.op_Inequality
	// UnityEngine.BuoyancyEffector2D.op_Implicit
	// UnityEngine.BuoyancyEffector2D.op_Equality
	// UnityEngine.BuoyancyEffector2D.op_Inequality
	// UnityEngine.PointEffector2D.op_Implicit
	// UnityEngine.PointEffector2D.op_Equality
	// UnityEngine.PointEffector2D.op_Inequality
	// UnityEngine.PlatformEffector2D.op_Implicit
	// UnityEngine.PlatformEffector2D.op_Equality
	// UnityEngine.PlatformEffector2D.op_Inequality
	// UnityEngine.SurfaceEffector2D.op_Implicit
	// UnityEngine.SurfaceEffector2D.op_Equality
	// UnityEngine.SurfaceEffector2D.op_Inequality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
	// UnityEngine.ConstantForce2D.op_Implicit
	// UnityEngine.ConstantForce2D.op_Equality
	// UnityEngine.ConstantForce2D.op_Inequality
	// UnityEngine.PhysicsMaterial2D.op_Implicit
	// UnityEngine.PhysicsMaterial2D.op_Equality
	// UnityEngine.PhysicsMaterial2D.op_Inequality
	// UnityEngine.SpriteMask.op_Implicit
	// UnityEngine.SpriteMask.op_Equality
	// UnityEngine.SpriteMask.op_Inequality
	// UnityEngine.Terrain.op_Implicit
	// UnityEngine.Terrain.op_Equality
	// UnityEngine.Terrain.op_Inequality
	// UnityEngine.Tree.op_Implicit
	// UnityEngine.Tree.op_Equality
	// UnityEngine.Tree.op_Inequality
	// UnityEngine.TerrainData.op_Implicit
	// UnityEngine.TerrainData.op_Equality
	// UnityEngine.TerrainData.op_Inequality
	// UnityEngine.TerrainLayer.op_Implicit
	// UnityEngine.TerrainLayer.op_Equality
	// UnityEngine.TerrainLayer.op_Inequality
	// UnityEngine.TerrainCollider.op_Implicit
	// UnityEngine.TerrainCollider.op_Equality
	// UnityEngine.TerrainCollider.op_Inequality
	// UnityEngine.TextMesh.op_Implicit
	// UnityEngine.TextMesh.op_Equality
	// UnityEngine.TextMesh.op_Inequality
	// UnityEngine.Font.op_Implicit
	// UnityEngine.Font.op_Equality
	// UnityEngine.Font.op_Inequality
	// UnityEngine.Tilemaps.Tile.op_Implicit
	// UnityEngine.Tilemaps.Tile.op_Equality
	// UnityEngine.Tilemaps.Tile.op_Inequality
	// UnityEngine.Tilemaps.Tilemap.op_Implicit
	// UnityEngine.Tilemaps.Tilemap.op_Equality
	// UnityEngine.Tilemaps.Tilemap.op_Inequality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
	// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
	// UnityEngine.CanvasGroup.op_Implicit
	// UnityEngine.CanvasGroup.op_Equality
	// UnityEngine.CanvasGroup.op_Inequality
	// UnityEngine.CanvasRenderer.op_Implicit
	// UnityEngine.CanvasRenderer.op_Equality
	// UnityEngine.CanvasRenderer.op_Inequality
	// UnityEngine.Canvas.op_Implicit
	// UnityEngine.Canvas.op_Equality
	// UnityEngine.Canvas.op_Inequality
	// UnityEngine.UIElements.VectorImage.op_Implicit
	// UnityEngine.UIElements.VectorImage.op_Equality
	// UnityEngine.UIElements.VectorImage.op_Inequality
	// UnityEngine.UIElements.PanelSettings.op_Implicit
	// UnityEngine.UIElements.PanelSettings.op_Equality
	// UnityEngine.UIElements.PanelSettings.op_Inequality
	// UnityEngine.UIElements.UIDocument.op_Implicit
	// UnityEngine.UIElements.UIDocument.op_Equality
	// UnityEngine.UIElements.UIDocument.op_Inequality
	// UnityEngine.UIElements.StyleSheet.op_Implicit
	// UnityEngine.UIElements.StyleSheet.op_Equality
	// UnityEngine.UIElements.StyleSheet.op_Inequality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
	// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
	// UnityEngine.UIElements.PanelTextSettings.op_Implicit
	// UnityEngine.UIElements.PanelTextSettings.op_Equality
	// UnityEngine.UIElements.PanelTextSettings.op_Inequality
	// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
	// UnityEngine.UIElements.VisualTreeAsset.op_Equality
	// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
	// UnityEngine.WheelCollider.op_Implicit
	// UnityEngine.WheelCollider.op_Equality
	// UnityEngine.WheelCollider.op_Inequality
	// UnityEngine.Video.VideoClip.op_Implicit
	// UnityEngine.Video.VideoClip.op_Equality
	// UnityEngine.Video.VideoClip.op_Inequality
	// UnityEngine.Video.VideoPlayer.op_Implicit
	// UnityEngine.Video.VideoPlayer.op_Equality
	// UnityEngine.Video.VideoPlayer.op_Inequality
	// UnityEngine.WindZone.op_Implicit
	// UnityEngine.WindZone.op_Equality
	// UnityEngine.WindZone.op_Inequality
	// iTween.op_Implicit
	// iTween.op_Equality
	// iTween.op_Inequality
	// MoveSample.op_Implicit
	// MoveSample.op_Equality
	// MoveSample.op_Inequality
	// RotateSample.op_Implicit
	// RotateSample.op_Equality
	// RotateSample.op_Inequality
	// SampleInfo.op_Implicit
	// SampleInfo.op_Equality
	// SampleInfo.op_Inequality
	// UniAndroidPermission.op_Implicit
	// UniAndroidPermission.op_Equality
	// UniAndroidPermission.op_Inequality
	// BlinkLight.op_Implicit
	// BlinkLight.op_Equality
	// BlinkLight.op_Inequality
	// SetCameraHeight.op_Implicit
	// SetCameraHeight.op_Equality
	// SetCameraHeight.op_Inequality
	// ImageDataFetcher.op_Implicit
	// ImageDataFetcher.op_Equality
	// ImageDataFetcher.op_Inequality
	// TerrainDataFetcher.op_Implicit
	// TerrainDataFetcher.op_Equality
	// TerrainDataFetcher.op_Inequality
	// VectorDataFetcher.op_Implicit
	// VectorDataFetcher.op_Equality
	// VectorDataFetcher.op_Inequality
	// MeshGenerationBase.op_Implicit
	// MeshGenerationBase.op_Equality
	// MeshGenerationBase.op_Inequality
	// ScriptablePalette.op_Implicit
	// ScriptablePalette.op_Equality
	// ScriptablePalette.op_Inequality
	// LineBuilder.op_Implicit
	// LineBuilder.op_Equality
	// LineBuilder.op_Inequality
	// AudioAnimator.op_Implicit
	// AudioAnimator.op_Equality
	// AudioAnimator.op_Inequality
	// BotonCambiarEscena.op_Implicit
	// BotonCambiarEscena.op_Equality
	// BotonCambiarEscena.op_Inequality
	// CameraInstancer.op_Implicit
	// CameraInstancer.op_Equality
	// CameraInstancer.op_Inequality
	// Cannon.op_Implicit
	// Cannon.op_Equality
	// Cannon.op_Inequality
	// Clock.op_Implicit
	// Clock.op_Equality
	// Clock.op_Inequality
	// ClockSound.op_Implicit
	// ClockSound.op_Equality
	// ClockSound.op_Inequality
	// VistaLinks.op_Implicit
	// VistaLinks.op_Equality
	// VistaLinks.op_Inequality
	// ExperienceToggler.op_Implicit
	// ExperienceToggler.op_Equality
	// ExperienceToggler.op_Inequality
	// FaceCamera.op_Implicit
	// FaceCamera.op_Equality
	// FaceCamera.op_Inequality
	// FadeOutObjects.op_Implicit
	// FadeOutObjects.op_Equality
	// FadeOutObjects.op_Inequality
	// GameManager.op_Implicit
	// GameManager.op_Equality
	// GameManager.op_Inequality
	// GestureManager.op_Implicit
	// GestureManager.op_Equality
	// GestureManager.op_Inequality
	// RouteMaker.op_Implicit
	// RouteMaker.op_Equality
	// RouteMaker.op_Inequality
	// LevelManager.op_Implicit
	// LevelManager.op_Equality
	// LevelManager.op_Inequality
	// MenuSlider.op_Implicit
	// MenuSlider.op_Equality
	// MenuSlider.op_Inequality
	// MeshPlacer.op_Implicit
	// MeshPlacer.op_Equality
	// MeshPlacer.op_Inequality
	// NextScene.op_Implicit
	// NextScene.op_Equality
	// NextScene.op_Inequality
	// TimedAnimation.op_Implicit
	// TimedAnimation.op_Equality
	// TimedAnimation.op_Inequality
	// CheckPermissions.op_Implicit
	// CheckPermissions.op_Equality
	// CheckPermissions.op_Inequality
	// Puente.op_Implicit
	// Puente.op_Equality
	// Puente.op_Inequality
	// ScaleClamp.op_Implicit
	// ScaleClamp.op_Equality
	// ScaleClamp.op_Inequality
	// SoundManager.op_Implicit
	// SoundManager.op_Equality
	// SoundManager.op_Inequality
	// SwipeRotate.op_Implicit
	// SwipeRotate.op_Equality
	// SwipeRotate.op_Inequality
	// TextAnim.op_Implicit
	// TextAnim.op_Equality
	// TextAnim.op_Inequality
	// TrackedImageSolver.op_Implicit
	// TrackedImageSolver.op_Equality
	// TrackedImageSolver.op_Inequality
	// AnimTutorial.op_Implicit
	// AnimTutorial.op_Equality
	// AnimTutorial.op_Inequality
	// MonumentoUI.op_Implicit
	// MonumentoUI.op_Equality
	// MonumentoUI.op_Inequality
	// PopUp.op_Implicit
	// PopUp.op_Equality
	// PopUp.op_Inequality
	// PopUpInstancer.op_Implicit
	// PopUpInstancer.op_Equality
	// PopUpInstancer.op_Inequality
	// UIFollower.op_Implicit
	// UIFollower.op_Equality
	// UIFollower.op_Inequality
	// Voz.op_Implicit
	// Voz.op_Equality
	// Voz.op_Inequality
	// AnchorCreator.op_Implicit
	// AnchorCreator.op_Equality
	// AnchorCreator.op_Inequality
	// ARFeatheredPlaneMeshVisualizer.op_Implicit
	// ARFeatheredPlaneMeshVisualizer.op_Equality
	// ARFeatheredPlaneMeshVisualizer.op_Inequality
	// FoamController.op_Implicit
	// FoamController.op_Equality
	// FoamController.op_Inequality
	// ParticulasUI.op_Implicit
	// ParticulasUI.op_Equality
	// ParticulasUI.op_Inequality
	// U10PS_DissolveOverTime.op_Implicit
	// U10PS_DissolveOverTime.op_Equality
	// U10PS_DissolveOverTime.op_Inequality
	// U10PS_ExampleReview.op_Implicit
	// U10PS_ExampleReview.op_Equality
	// U10PS_ExampleReview.op_Inequality
	// U10PS_MouseRotation.op_Implicit
	// U10PS_MouseRotation.op_Equality
	// U10PS_MouseRotation.op_Inequality
	// U10PS_SnowOverTime.op_Implicit
	// U10PS_SnowOverTime.op_Equality
	// U10PS_SnowOverTime.op_Inequality
	// Plexus.op_Implicit
	// Plexus.op_Equality
	// Plexus.op_Inequality
	// Reporter.op_Implicit
	// Reporter.op_Equality
	// Reporter.op_Inequality
	// ReporterGUI.op_Implicit
	// ReporterGUI.op_Equality
	// ReporterGUI.op_Inequality
	// ReporterMessageReceiver.op_Implicit
	// ReporterMessageReceiver.op_Equality
	// ReporterMessageReceiver.op_Inequality
	// Rotate.op_Implicit
	// Rotate.op_Equality
	// Rotate.op_Inequality
	// TestReporter.op_Implicit
	// TestReporter.op_Equality
	// TestReporter.op_Inequality
	// UnityStandardAssets.ImageEffects.Antialiasing.op_Implicit
	// UnityStandardAssets.ImageEffects.Antialiasing.op_Equality
	// UnityStandardAssets.ImageEffects.Antialiasing.op_Inequality
	// UnityStandardAssets.ImageEffects.Bloom.op_Implicit
	// UnityStandardAssets.ImageEffects.Bloom.op_Equality
	// UnityStandardAssets.ImageEffects.Bloom.op_Inequality
	// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Implicit
	// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Equality
	// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Inequality
	// UnityStandardAssets.ImageEffects.BloomOptimized.op_Implicit
	// UnityStandardAssets.ImageEffects.BloomOptimized.op_Equality
	// UnityStandardAssets.ImageEffects.BloomOptimized.op_Inequality
	// UnityStandardAssets.ImageEffects.Blur.op_Implicit
	// UnityStandardAssets.ImageEffects.Blur.op_Equality
	// UnityStandardAssets.ImageEffects.Blur.op_Inequality
	// UnityStandardAssets.ImageEffects.BlurOptimized.op_Implicit
	// UnityStandardAssets.ImageEffects.BlurOptimized.op_Equality
	// UnityStandardAssets.ImageEffects.BlurOptimized.op_Inequality
	// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Implicit
	// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Equality
	// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Inequality
	// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Implicit
	// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Equality
	// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Inequality
	// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Implicit
	// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Equality
	// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Inequality
	// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Implicit
	// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Equality
	// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Inequality
	// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Implicit
	// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Equality
	// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Inequality
	// UnityStandardAssets.ImageEffects.ContrastStretch.op_Implicit
	// UnityStandardAssets.ImageEffects.ContrastStretch.op_Equality
	// UnityStandardAssets.ImageEffects.ContrastStretch.op_Inequality
	// UnityStandardAssets.ImageEffects.CreaseShading.op_Implicit
	// UnityStandardAssets.ImageEffects.CreaseShading.op_Equality
	// UnityStandardAssets.ImageEffects.CreaseShading.op_Inequality
	// UnityStandardAssets.ImageEffects.DepthOfField.op_Implicit
	// UnityStandardAssets.ImageEffects.DepthOfField.op_Equality
	// UnityStandardAssets.ImageEffects.DepthOfField.op_Inequality
	// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Implicit
	// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Equality
	// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Inequality
	// UnityStandardAssets.ImageEffects.EdgeDetection.op_Implicit
	// UnityStandardAssets.ImageEffects.EdgeDetection.op_Equality
	// UnityStandardAssets.ImageEffects.EdgeDetection.op_Inequality
	// UnityStandardAssets.ImageEffects.Fisheye.op_Implicit
	// UnityStandardAssets.ImageEffects.Fisheye.op_Equality
	// UnityStandardAssets.ImageEffects.Fisheye.op_Inequality
	// UnityStandardAssets.ImageEffects.Grayscale.op_Implicit
	// UnityStandardAssets.ImageEffects.Grayscale.op_Equality
	// UnityStandardAssets.ImageEffects.Grayscale.op_Inequality
	// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Implicit
	// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Equality
	// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Inequality
	// UnityStandardAssets.ImageEffects.MotionBlur.op_Implicit
	// UnityStandardAssets.ImageEffects.MotionBlur.op_Equality
	// UnityStandardAssets.ImageEffects.MotionBlur.op_Inequality
	// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Implicit
	// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Equality
	// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Inequality
	// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Implicit
	// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Equality
	// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Inequality
	// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Implicit
	// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Equality
	// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Inequality
	// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Implicit
	// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Equality
	// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Inequality
	// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Implicit
	// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Equality
	// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Inequality
	// UnityStandardAssets.ImageEffects.SepiaTone.op_Implicit
	// UnityStandardAssets.ImageEffects.SepiaTone.op_Equality
	// UnityStandardAssets.ImageEffects.SepiaTone.op_Inequality
	// UnityStandardAssets.ImageEffects.SunShafts.op_Implicit
	// UnityStandardAssets.ImageEffects.SunShafts.op_Equality
	// UnityStandardAssets.ImageEffects.SunShafts.op_Inequality
	// UnityStandardAssets.ImageEffects.Tonemapping.op_Implicit
	// UnityStandardAssets.ImageEffects.Tonemapping.op_Equality
	// UnityStandardAssets.ImageEffects.Tonemapping.op_Inequality
	// UnityStandardAssets.ImageEffects.Twirl.op_Implicit
	// UnityStandardAssets.ImageEffects.Twirl.op_Equality
	// UnityStandardAssets.ImageEffects.Twirl.op_Inequality
	// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Implicit
	// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Equality
	// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Inequality
	// UnityStandardAssets.ImageEffects.Vortex.op_Implicit
	// UnityStandardAssets.ImageEffects.Vortex.op_Equality
	// UnityStandardAssets.ImageEffects.Vortex.op_Inequality
	// MobileWaterShaderEKV.DisplayControl.op_Implicit
	// MobileWaterShaderEKV.DisplayControl.op_Equality
	// MobileWaterShaderEKV.DisplayControl.op_Inequality
	// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Implicit
	// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Equality
	// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Inequality
	// MobileWaterShaderEKV.SetValueOnStart.op_Implicit
	// MobileWaterShaderEKV.SetValueOnStart.op_Equality
	// MobileWaterShaderEKV.SetValueOnStart.op_Inequality
	// MobileWaterShaderEKV.SimpleRotation.op_Implicit
	// MobileWaterShaderEKV.SimpleRotation.op_Equality
	// MobileWaterShaderEKV.SimpleRotation.op_Inequality
	// MobileWaterShaderEKV.WaterControl_EKV.op_Implicit
	// MobileWaterShaderEKV.WaterControl_EKV.op_Equality
	// MobileWaterShaderEKV.WaterControl_EKV.op_Inequality
	// LowPolyWater.LowPolyWater.op_Implicit
	// LowPolyWater.LowPolyWater.op_Equality
	// LowPolyWater.LowPolyWater.op_Inequality
	// Mapbox.Unity.Utilities.Console.op_Implicit
	// Mapbox.Unity.Utilities.Console.op_Equality
	// Mapbox.Unity.Utilities.Console.op_Inequality
	// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Implicit
	// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Equality
	// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Inequality
	// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Implicit
	// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Equality
	// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Inequality
	// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Implicit
	// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Equality
	// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Inequality
	// Mapbox.Unity.Utilities.Runnable.op_Implicit
	// Mapbox.Unity.Utilities.Runnable.op_Equality
	// Mapbox.Unity.Utilities.Runnable.op_Inequality
	// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Implicit
	// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Equality
	// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Inequality
	// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Implicit
	// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Equality
	// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Inequality
	// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Implicit
	// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Equality
	// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Inequality
	// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Implicit
	// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Equality
	// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Inequality
	// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Implicit
	// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Equality
	// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Inequality
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Implicit
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Equality
	// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Inequality
	// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Implicit
	// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Equality
	// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Inequality
	// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Implicit
	// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Equality
	// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Inequality
	// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Implicit
	// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Equality
	// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Inequality
	// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Implicit
	// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Equality
	// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Inequality
	// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Implicit
	// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Equality
	// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Inequality
	// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Implicit
	// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Equality
	// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Inequality
	// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Implicit
	// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Equality
	// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Inequality
	// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Implicit
	// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Equality
	// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Inequality
	// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Implicit
	// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Equality
	// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Inequality
	// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Implicit
	// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Equality
	// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Inequality
	// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Implicit
	// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Equality
	// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Inequality
	// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Implicit
	// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Equality
	// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Inequality
	// Mapbox.Unity.Location.AngleSmoothingAverage.op_Implicit
	// Mapbox.Unity.Location.AngleSmoothingAverage.op_Equality
	// Mapbox.Unity.Location.AngleSmoothingAverage.op_Inequality
	// Mapbox.Unity.Location.AngleSmoothingEMA.op_Implicit
	// Mapbox.Unity.Location.AngleSmoothingEMA.op_Equality
	// Mapbox.Unity.Location.AngleSmoothingEMA.op_Inequality
	// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Implicit
	// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Equality
	// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Inequality
	// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Implicit
	// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Equality
	// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Inequality
	// Mapbox.Unity.Location.DeviceLocationProvider.op_Implicit
	// Mapbox.Unity.Location.DeviceLocationProvider.op_Equality
	// Mapbox.Unity.Location.DeviceLocationProvider.op_Inequality
	// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Implicit
	// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Equality
	// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Inequality
	// Mapbox.Unity.Location.EditorLocationProvider.op_Implicit
	// Mapbox.Unity.Location.EditorLocationProvider.op_Equality
	// Mapbox.Unity.Location.EditorLocationProvider.op_Inequality
	// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Implicit
	// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Equality
	// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Inequality
	// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Implicit
	// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Equality
	// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Inequality
	// Mapbox.Unity.Location.LocationProviderFactory.op_Implicit
	// Mapbox.Unity.Location.LocationProviderFactory.op_Equality
	// Mapbox.Unity.Location.LocationProviderFactory.op_Inequality
	// Mapbox.Unity.Location.TransformLocationProvider.op_Implicit
	// Mapbox.Unity.Location.TransformLocationProvider.op_Equality
	// Mapbox.Unity.Location.TransformLocationProvider.op_Inequality
	// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Implicit
	// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Equality
	// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Inequality
	// Mapbox.Unity.Map.AbstractMap.op_Implicit
	// Mapbox.Unity.Map.AbstractMap.op_Equality
	// Mapbox.Unity.Map.AbstractMap.op_Inequality
	// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Implicit
	// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Equality
	// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Inequality
	// Mapbox.Unity.Map.MapVisualizer.op_Implicit
	// Mapbox.Unity.Map.MapVisualizer.op_Equality
	// Mapbox.Unity.Map.MapVisualizer.op_Inequality
	// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Implicit
	// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Equality
	// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Inequality
	// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Implicit
	// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Equality
	// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Inequality
	// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Implicit
	// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Equality
	// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Inequality
	// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Implicit
	// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Equality
	// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Inequality
	// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Implicit
	// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Equality
	// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Inequality
	// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Implicit
	// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Equality
	// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Inequality
	// Mapbox.Examples.HighlightBuildings.op_Implicit
	// Mapbox.Examples.HighlightBuildings.op_Equality
	// Mapbox.Examples.HighlightBuildings.op_Inequality
	// Mapbox.Examples.TextMeshOutline.op_Implicit
	// Mapbox.Examples.TextMeshOutline.op_Equality
	// Mapbox.Examples.TextMeshOutline.op_Inequality
	// Mapbox.Examples.AstronautDirections.op_Implicit
	// Mapbox.Examples.AstronautDirections.op_Equality
	// Mapbox.Examples.AstronautDirections.op_Inequality
	// Mapbox.Examples.AstronautMouseController.op_Implicit
	// Mapbox.Examples.AstronautMouseController.op_Equality
	// Mapbox.Examples.AstronautMouseController.op_Inequality
	// Mapbox.Examples.CharacterMovement.op_Implicit
	// Mapbox.Examples.CharacterMovement.op_Equality
	// Mapbox.Examples.CharacterMovement.op_Inequality
	// Mapbox.Examples.POIPlacementScriptExample.op_Implicit
	// Mapbox.Examples.POIPlacementScriptExample.op_Equality
	// Mapbox.Examples.POIPlacementScriptExample.op_Inequality
	// Mapbox.Examples.SpawnOnMap.op_Implicit
	// Mapbox.Examples.SpawnOnMap.op_Equality
	// Mapbox.Examples.SpawnOnMap.op_Inequality
	// Mapbox.Examples.SpawnOnGlobeExample.op_Implicit
	// Mapbox.Examples.SpawnOnGlobeExample.op_Equality
	// Mapbox.Examples.SpawnOnGlobeExample.op_Inequality
	// Mapbox.Examples.CameraBillboard.op_Implicit
	// Mapbox.Examples.CameraBillboard.op_Equality
	// Mapbox.Examples.CameraBillboard.op_Inequality
	// Mapbox.Examples.CameraMovement.op_Implicit
	// Mapbox.Examples.CameraMovement.op_Equality
	// Mapbox.Examples.CameraMovement.op_Inequality
	// Mapbox.Examples.ChangeShadowDistance.op_Implicit
	// Mapbox.Examples.ChangeShadowDistance.op_Equality
	// Mapbox.Examples.ChangeShadowDistance.op_Inequality
	// Mapbox.Examples.DragableDirectionWaypoint.op_Implicit
	// Mapbox.Examples.DragableDirectionWaypoint.op_Equality
	// Mapbox.Examples.DragableDirectionWaypoint.op_Inequality
	// Mapbox.Examples.FeatureSelectionDetector.op_Implicit
	// Mapbox.Examples.FeatureSelectionDetector.op_Equality
	// Mapbox.Examples.FeatureSelectionDetector.op_Inequality
	// Mapbox.Examples.FeatureUiMarker.op_Implicit
	// Mapbox.Examples.FeatureUiMarker.op_Equality
	// Mapbox.Examples.FeatureUiMarker.op_Inequality
	// Mapbox.Examples.ForwardGeocodeUserInput.op_Implicit
	// Mapbox.Examples.ForwardGeocodeUserInput.op_Equality
	// Mapbox.Examples.ForwardGeocodeUserInput.op_Inequality
	// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Implicit
	// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Equality
	// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Inequality
	// Mapbox.Examples.HighlightFeature.op_Implicit
	// Mapbox.Examples.HighlightFeature.op_Equality
	// Mapbox.Examples.HighlightFeature.op_Inequality
	// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Implicit
	// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Equality
	// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Inequality
	// Mapbox.Examples.LabelTextSetter.op_Implicit
	// Mapbox.Examples.LabelTextSetter.op_Equality
	// Mapbox.Examples.LabelTextSetter.op_Inequality
	// Mapbox.Examples.LoadingPanelController.op_Implicit
	// Mapbox.Examples.LoadingPanelController.op_Equality
	// Mapbox.Examples.LoadingPanelController.op_Inequality
	// Mapbox.Examples.LocationStatus.op_Implicit
	// Mapbox.Examples.LocationStatus.op_Equality
	// Mapbox.Examples.LocationStatus.op_Inequality
	// Mapbox.Examples.MakiHelper.op_Implicit
	// Mapbox.Examples.MakiHelper.op_Equality
	// Mapbox.Examples.MakiHelper.op_Inequality
	// Mapbox.Examples.ObjectInspectorModifier.op_Implicit
	// Mapbox.Examples.ObjectInspectorModifier.op_Equality
	// Mapbox.Examples.ObjectInspectorModifier.op_Inequality
	// Mapbox.Examples.PoiLabelTextSetter.op_Implicit
	// Mapbox.Examples.PoiLabelTextSetter.op_Equality
	// Mapbox.Examples.PoiLabelTextSetter.op_Inequality
	// Mapbox.Examples.PoiMarkerHelper.op_Implicit
	// Mapbox.Examples.PoiMarkerHelper.op_Equality
	// Mapbox.Examples.PoiMarkerHelper.op_Inequality
	// Mapbox.Examples.PositionWithLocationProvider.op_Implicit
	// Mapbox.Examples.PositionWithLocationProvider.op_Equality
	// Mapbox.Examples.PositionWithLocationProvider.op_Inequality
	// Mapbox.Examples.QuadTreeCameraMovement.op_Implicit
	// Mapbox.Examples.QuadTreeCameraMovement.op_Equality
	// Mapbox.Examples.QuadTreeCameraMovement.op_Inequality
	// Mapbox.Examples.ReloadMap.op_Implicit
	// Mapbox.Examples.ReloadMap.op_Equality
	// Mapbox.Examples.ReloadMap.op_Inequality
	// Mapbox.Examples.ReverseGeocodeUserInput.op_Implicit
	// Mapbox.Examples.ReverseGeocodeUserInput.op_Equality
	// Mapbox.Examples.ReverseGeocodeUserInput.op_Inequality
	// Mapbox.Examples.RotateWithLocationProvider.op_Implicit
	// Mapbox.Examples.RotateWithLocationProvider.op_Equality
	// Mapbox.Examples.RotateWithLocationProvider.op_Inequality
	// Mapbox.Examples.TrafficUvAnimator.op_Implicit
	// Mapbox.Examples.TrafficUvAnimator.op_Equality
	// Mapbox.Examples.TrafficUvAnimator.op_Inequality
	// Mapbox.Examples.Voxels.VoxelFetcher.op_Implicit
	// Mapbox.Examples.Voxels.VoxelFetcher.op_Equality
	// Mapbox.Examples.Voxels.VoxelFetcher.op_Inequality
	// Mapbox.Examples.Scripts.LogLocationProviderData.op_Implicit
	// Mapbox.Examples.Scripts.LogLocationProviderData.op_Equality
	// Mapbox.Examples.Scripts.LogLocationProviderData.op_Inequality
	// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Implicit
	// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Equality
	// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Inequality
	// Mapbox.Examples.Playground.DirectionsExample.op_Implicit
	// Mapbox.Examples.Playground.DirectionsExample.op_Equality
	// Mapbox.Examples.Playground.DirectionsExample.op_Inequality
	// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Implicit
	// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Equality
	// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Inequality
	// Mapbox.Examples.Playground.RasterTileExample.op_Implicit
	// Mapbox.Examples.Playground.RasterTileExample.op_Equality
	// Mapbox.Examples.Playground.RasterTileExample.op_Inequality
	// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Implicit
	// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Equality
	// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Inequality
	// Mapbox.Examples.Playground.VectorTileExample.op_Implicit
	// Mapbox.Examples.Playground.VectorTileExample.op_Equality
	// Mapbox.Examples.Playground.VectorTileExample.op_Inequality
	// ARLocation.NewPathLineRenderer.op_Implicit
	// ARLocation.NewPathLineRenderer.op_Equality
	// ARLocation.NewPathLineRenderer.op_Inequality
	// ARLocation.WorldBuilder.op_Implicit
	// ARLocation.WorldBuilder.op_Equality
	// ARLocation.WorldBuilder.op_Inequality
	// ARLocation.WorldBuilderApplicationController.op_Implicit
	// ARLocation.WorldBuilderApplicationController.op_Equality
	// ARLocation.WorldBuilderApplicationController.op_Inequality
	// ARLocation.WorldVoxelController.op_Implicit
	// ARLocation.WorldVoxelController.op_Equality
	// ARLocation.WorldVoxelController.op_Inequality
	// ARLocation.ARLocationManager.op_Implicit
	// ARLocation.ARLocationManager.op_Equality
	// ARLocation.ARLocationManager.op_Inequality
	// ARLocation.ARLocationOrientation.op_Implicit
	// ARLocation.ARLocationOrientation.op_Equality
	// ARLocation.ARLocationOrientation.op_Inequality
	// ARLocation.ARLocationProvider.op_Implicit
	// ARLocation.ARLocationProvider.op_Equality
	// ARLocation.ARLocationProvider.op_Inequality
	// ARLocation.GroundHeight.op_Implicit
	// ARLocation.GroundHeight.op_Equality
	// ARLocation.GroundHeight.op_Inequality
	// ARLocation.Hotspot.op_Implicit
	// ARLocation.Hotspot.op_Equality
	// ARLocation.Hotspot.op_Inequality
	// ARLocation.MoveAlongPath.op_Implicit
	// ARLocation.MoveAlongPath.op_Equality
	// ARLocation.MoveAlongPath.op_Inequality
	// ARLocation.PlaceAlongPath.op_Implicit
	// ARLocation.PlaceAlongPath.op_Equality
	// ARLocation.PlaceAlongPath.op_Inequality
	// ARLocation.PlaceAtLocation.op_Implicit
	// ARLocation.PlaceAtLocation.op_Equality
	// ARLocation.PlaceAtLocation.op_Inequality
	// ARLocation.PlaceAtLocations.op_Implicit
	// ARLocation.PlaceAtLocations.op_Equality
	// ARLocation.PlaceAtLocations.op_Inequality
	// ARLocation.RenderPathLine.op_Implicit
	// ARLocation.RenderPathLine.op_Equality
	// ARLocation.RenderPathLine.op_Inequality
	// ARLocation.WebMapLoader.op_Implicit
	// ARLocation.WebMapLoader.op_Equality
	// ARLocation.WebMapLoader.op_Inequality
	// ARLocation.ARLocationConfig.op_Implicit
	// ARLocation.ARLocationConfig.op_Equality
	// ARLocation.ARLocationConfig.op_Inequality
	// ARLocation.LocationData.op_Implicit
	// ARLocation.LocationData.op_Equality
	// ARLocation.LocationData.op_Inequality
	// ARLocation.LocationPath.op_Implicit
	// ARLocation.LocationPath.op_Equality
	// ARLocation.LocationPath.op_Inequality
	// ARLocation.PrefabDatabase.op_Implicit
	// ARLocation.PrefabDatabase.op_Equality
	// ARLocation.PrefabDatabase.op_Inequality
	// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Implicit
	// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Equality
	// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Inequality
	// ARLocation.Utils.DebugCanvas.op_Implicit
	// ARLocation.Utils.DebugCanvas.op_Equality
	// ARLocation.Utils.DebugCanvas.op_Inequality
	// ARLocation.Utils.DevCameraController.op_Implicit
	// ARLocation.Utils.DevCameraController.op_Equality
	// ARLocation.Utils.DevCameraController.op_Inequality
	// ARLocation.Utils.FaceCamera.op_Implicit
	// ARLocation.Utils.FaceCamera.op_Equality
	// ARLocation.Utils.FaceCamera.op_Inequality
	// ARLocation.Utils.FadeOutTextMesh.op_Implicit
	// ARLocation.Utils.FadeOutTextMesh.op_Equality
	// ARLocation.Utils.FadeOutTextMesh.op_Inequality
	// ARLocation.Utils.FollowCameraPosition.op_Implicit
	// ARLocation.Utils.FollowCameraPosition.op_Equality
	// ARLocation.Utils.FollowCameraPosition.op_Inequality
	// ARLocation.Utils.RotateObject.op_Implicit
	// ARLocation.Utils.RotateObject.op_Equality
	// ARLocation.Utils.RotateObject.op_Inequality
	// ARLocation.Utils.SelectScene.op_Implicit
	// ARLocation.Utils.SelectScene.op_Equality
	// ARLocation.Utils.SelectScene.op_Inequality
	// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Implicit
	// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Equality
	// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Inequality
	// ARLocation.Utils.SmoothMove.op_Implicit
	// ARLocation.Utils.SmoothMove.op_Equality
	// ARLocation.Utils.SmoothMove.op_Inequality
	// ARLocation.UI.ARTrackingInfo.op_Implicit
	// ARLocation.UI.ARTrackingInfo.op_Equality
	// ARLocation.UI.ARTrackingInfo.op_Inequality
	// ARLocation.UI.DebugDistance.op_Implicit
	// ARLocation.UI.DebugDistance.op_Equality
	// ARLocation.UI.DebugDistance.op_Inequality
	// ARLocation.UI.DebugInfoOverlay.op_Implicit
	// ARLocation.UI.DebugInfoOverlay.op_Equality
	// ARLocation.UI.DebugInfoOverlay.op_Inequality
	// ARLocation.UI.LoadingBar.op_Implicit
	// ARLocation.UI.LoadingBar.op_Equality
	// ARLocation.UI.LoadingBar.op_Inequality
	// ARLocation.UI.LocationProviderInfo.op_Implicit
	// ARLocation.UI.LocationProviderInfo.op_Equality
	// ARLocation.UI.LocationProviderInfo.op_Inequality
	// ARLocation.UI.OrientationInfo.op_Implicit
	// ARLocation.UI.OrientationInfo.op_Equality
	// ARLocation.UI.OrientationInfo.op_Inequality
	// ARLocation.MapboxRoutes.CustomRoute.op_Implicit
	// ARLocation.MapboxRoutes.CustomRoute.op_Equality
	// ARLocation.MapboxRoutes.CustomRoute.op_Inequality
	// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Implicit
	// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Equality
	// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Inequality
	// ARLocation.MapboxRoutes.MapboxRoute.op_Implicit
	// ARLocation.MapboxRoutes.MapboxRoute.op_Equality
	// ARLocation.MapboxRoutes.MapboxRoute.op_Inequality
	// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Implicit
	// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Equality
	// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Inequality
	// ARLocation.MapboxRoutes.PathRouteRenderer.op_Implicit
	// ARLocation.MapboxRoutes.PathRouteRenderer.op_Equality
	// ARLocation.MapboxRoutes.PathRouteRenderer.op_Inequality
	// ARLocation.MapboxRoutes.SignPost.op_Implicit
	// ARLocation.MapboxRoutes.SignPost.op_Equality
	// ARLocation.MapboxRoutes.SignPost.op_Inequality
	// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Implicit
	// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Equality
	// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Inequality
	// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Implicit
	// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Equality
	// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Inequality
	// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Implicit
	// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Equality
	// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Inequality
	// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Implicit
	// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Equality
	// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Inequality
	// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Implicit
	// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Equality
	// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Inequality
	// AQUAS_Lite.AQUAS_Lite_Camera.op_Implicit
	// AQUAS_Lite.AQUAS_Lite_Camera.op_Equality
	// AQUAS_Lite.AQUAS_Lite_Camera.op_Inequality
	// AQUAS_Lite.AQUAS_Lite_CamNav.op_Implicit
	// AQUAS_Lite.AQUAS_Lite_CamNav.op_Equality
	// AQUAS_Lite.AQUAS_Lite_CamNav.op_Inequality
	// AQUAS_Lite.AQUAS_Lite_Reflection.op_Implicit
	// AQUAS_Lite.AQUAS_Lite_Reflection.op_Equality
	// AQUAS_Lite.AQUAS_Lite_Reflection.op_Inequality
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Implicit
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Equality
	// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Inequality
	// TMPro.TextContainer.op_Implicit
	// TMPro.TextContainer.op_Equality
	// TMPro.TextContainer.op_Inequality
	// TMPro.TextMeshPro.op_Implicit
	// TMPro.TextMeshPro.op_Equality
	// TMPro.TextMeshPro.op_Inequality
	// TMPro.TextMeshProUGUI.op_Implicit
	// TMPro.TextMeshProUGUI.op_Equality
	// TMPro.TextMeshProUGUI.op_Inequality
	// TMPro.TMP_ColorGradient.op_Implicit
	// TMPro.TMP_ColorGradient.op_Equality
	// TMPro.TMP_ColorGradient.op_Inequality
	// TMPro.TMP_Dropdown.op_Implicit
	// TMPro.TMP_Dropdown.op_Equality
	// TMPro.TMP_Dropdown.op_Inequality
	// TMPro.TMP_FontAsset.op_Implicit
	// TMPro.TMP_FontAsset.op_Equality
	// TMPro.TMP_FontAsset.op_Inequality
	// TMPro.TMP_InputField.op_Implicit
	// TMPro.TMP_InputField.op_Equality
	// TMPro.TMP_InputField.op_Inequality
	// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
	// TMPro.TMP_PackageResourceImporterWindow.op_Equality
	// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
	// TMPro.TMP_ScrollbarEventHandler.op_Implicit
	// TMPro.TMP_ScrollbarEventHandler.op_Equality
	// TMPro.TMP_ScrollbarEventHandler.op_Inequality
	// TMPro.TMP_SelectionCaret.op_Implicit
	// TMPro.TMP_SelectionCaret.op_Equality
	// TMPro.TMP_SelectionCaret.op_Inequality
	// TMPro.TMP_Settings.op_Implicit
	// TMPro.TMP_Settings.op_Equality
	// TMPro.TMP_Settings.op_Inequality
	// TMPro.TMP_SpriteAnimator.op_Implicit
	// TMPro.TMP_SpriteAnimator.op_Equality
	// TMPro.TMP_SpriteAnimator.op_Inequality
	// TMPro.TMP_SpriteAsset.op_Implicit
	// TMPro.TMP_SpriteAsset.op_Equality
	// TMPro.TMP_SpriteAsset.op_Inequality
	// TMPro.TMP_StyleSheet.op_Implicit
	// TMPro.TMP_StyleSheet.op_Equality
	// TMPro.TMP_StyleSheet.op_Inequality
	// TMPro.TMP_SubMesh.op_Implicit
	// TMPro.TMP_SubMesh.op_Equality
	// TMPro.TMP_SubMesh.op_Inequality
	// TMPro.TMP_SubMeshUI.op_Implicit
	// TMPro.TMP_SubMeshUI.op_Equality
	// TMPro.TMP_SubMeshUI.op_Inequality
	// UnityEngine.UI.Button.op_Implicit
	// UnityEngine.UI.Button.op_Equality
	// UnityEngine.UI.Button.op_Inequality
	// UnityEngine.UI.Dropdown.op_Implicit
	// UnityEngine.UI.Dropdown.op_Equality
	// UnityEngine.UI.Dropdown.op_Inequality
	// UnityEngine.UI.GraphicRaycaster.op_Implicit
	// UnityEngine.UI.GraphicRaycaster.op_Equality
	// UnityEngine.UI.GraphicRaycaster.op_Inequality
	// UnityEngine.UI.Image.op_Implicit
	// UnityEngine.UI.Image.op_Equality
	// UnityEngine.UI.Image.op_Inequality
	// UnityEngine.UI.InputField.op_Implicit
	// UnityEngine.UI.InputField.op_Equality
	// UnityEngine.UI.InputField.op_Inequality
	// UnityEngine.UI.AspectRatioFitter.op_Implicit
	// UnityEngine.UI.AspectRatioFitter.op_Equality
	// UnityEngine.UI.AspectRatioFitter.op_Inequality
	// UnityEngine.UI.CanvasScaler.op_Implicit
	// UnityEngine.UI.CanvasScaler.op_Equality
	// UnityEngine.UI.CanvasScaler.op_Inequality
	// UnityEngine.UI.ContentSizeFitter.op_Implicit
	// UnityEngine.UI.ContentSizeFitter.op_Equality
	// UnityEngine.UI.ContentSizeFitter.op_Inequality
	// UnityEngine.UI.GridLayoutGroup.op_Implicit
	// UnityEngine.UI.GridLayoutGroup.op_Equality
	// UnityEngine.UI.GridLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
	// UnityEngine.UI.LayoutElement.op_Implicit
	// UnityEngine.UI.LayoutElement.op_Equality
	// UnityEngine.UI.LayoutElement.op_Inequality
	// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.VerticalLayoutGroup.op_Equality
	// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
	// UnityEngine.UI.Mask.op_Implicit
	// UnityEngine.UI.Mask.op_Equality
	// UnityEngine.UI.Mask.op_Inequality
	// UnityEngine.UI.RawImage.op_Implicit
	// UnityEngine.UI.RawImage.op_Equality
	// UnityEngine.UI.RawImage.op_Inequality
	// UnityEngine.UI.RectMask2D.op_Implicit
	// UnityEngine.UI.RectMask2D.op_Equality
	// UnityEngine.UI.RectMask2D.op_Inequality
	// UnityEngine.UI.Scrollbar.op_Implicit
	// UnityEngine.UI.Scrollbar.op_Equality
	// UnityEngine.UI.Scrollbar.op_Inequality
	// UnityEngine.UI.ScrollRect.op_Implicit
	// UnityEngine.UI.ScrollRect.op_Equality
	// UnityEngine.UI.ScrollRect.op_Inequality
	// UnityEngine.UI.Selectable.op_Implicit
	// UnityEngine.UI.Selectable.op_Equality
	// UnityEngine.UI.Selectable.op_Inequality
	// UnityEngine.UI.Slider.op_Implicit
	// UnityEngine.UI.Slider.op_Equality
	// UnityEngine.UI.Slider.op_Inequality
	// UnityEngine.UI.Text.op_Implicit
	// UnityEngine.UI.Text.op_Equality
	// UnityEngine.UI.Text.op_Inequality
	// UnityEngine.UI.Toggle.op_Implicit
	// UnityEngine.UI.Toggle.op_Equality
	// UnityEngine.UI.Toggle.op_Inequality
	// UnityEngine.UI.ToggleGroup.op_Implicit
	// UnityEngine.UI.ToggleGroup.op_Equality
	// UnityEngine.UI.ToggleGroup.op_Inequality
	// UnityEngine.UI.Outline.op_Implicit
	// UnityEngine.UI.Outline.op_Equality
	// UnityEngine.UI.Outline.op_Inequality
	// UnityEngine.UI.PositionAsUV1.op_Implicit
	// UnityEngine.UI.PositionAsUV1.op_Equality
	// UnityEngine.UI.PositionAsUV1.op_Inequality
	// UnityEngine.UI.Shadow.op_Implicit
	// UnityEngine.UI.Shadow.op_Equality
	// UnityEngine.UI.Shadow.op_Inequality
	// UnityEngine.UIElements.PanelEventHandler.op_Implicit
	// UnityEngine.UIElements.PanelEventHandler.op_Equality
	// UnityEngine.UIElements.PanelEventHandler.op_Inequality
	// UnityEngine.UIElements.PanelRaycaster.op_Implicit
	// UnityEngine.UIElements.PanelRaycaster.op_Equality
	// UnityEngine.UIElements.PanelRaycaster.op_Inequality
	// UnityEngine.EventSystems.EventSystem.op_Implicit
	// UnityEngine.EventSystems.EventSystem.op_Equality
	// UnityEngine.EventSystems.EventSystem.op_Inequality
	// UnityEngine.EventSystems.EventTrigger.op_Implicit
	// UnityEngine.EventSystems.EventTrigger.op_Equality
	// UnityEngine.EventSystems.EventTrigger.op_Inequality
	// UnityEngine.EventSystems.BaseInput.op_Implicit
	// UnityEngine.EventSystems.BaseInput.op_Equality
	// UnityEngine.EventSystems.BaseInput.op_Inequality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
	// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
	// --------------- Plugin Stubs
	// --------------- Asset Stubs
	// UnityEngine.Transform.Rotate
	// UnityEngine.GameObject.FindWithTag
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// UnityEngine.Camera..ctor
	[UnityEngine.Scripting.PreserveAttribute()]
	public class AotStubs
	{
		
		// string.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Equality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Inequality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Equality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Inequality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 < arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 > arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 <= arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 >= arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Equality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Inequality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Inequality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Equality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Addition()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Subtraction()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_0()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Division()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Equality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Inequality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Color conversion = ((UnityEngine.Color)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			UnityEngine.Matrix4x4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Addition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Division()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Equality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Inequality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			UnityEngine.Quaternion @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Equality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Addition()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Equality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Inequality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector2 conversion = ((UnityEngine.Vector2)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Addition()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Division()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Equality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Inequality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
			global::UnityEngine.LayerMask arg0 = default(global::UnityEngine.LayerMask);
			int conversion = ((int)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.LayerMask, int> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.LayerMask, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
			int arg0 = default(int);
			UnityEngine.LayerMask conversion = ((UnityEngine.LayerMask)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<int, UnityEngine.LayerMask> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<int, UnityEngine.LayerMask>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RaycastHit2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
			global::UnityEngine.RaycastHit2D arg0 = default(global::UnityEngine.RaycastHit2D);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// iTween.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void iTween_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// iTween.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void iTween_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// iTween.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void iTween_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoveSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoveSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MoveSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoveSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MoveSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MoveSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotateSample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateSample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RotateSample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateSample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RotateSample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RotateSample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SampleInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SampleInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SampleInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SampleInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UniAndroidPermission.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UniAndroidPermission_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UniAndroidPermission.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UniAndroidPermission_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UniAndroidPermission.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UniAndroidPermission_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlinkLight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlinkLight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BlinkLight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlinkLight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlinkLight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlinkLight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SetCameraHeight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SetCameraHeight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SetCameraHeight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SetCameraHeight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SetCameraHeight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SetCameraHeight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImageDataFetcher.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImageDataFetcher_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ImageDataFetcher.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImageDataFetcher_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImageDataFetcher.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImageDataFetcher_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TerrainDataFetcher.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TerrainDataFetcher_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TerrainDataFetcher.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TerrainDataFetcher_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TerrainDataFetcher.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TerrainDataFetcher_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VectorDataFetcher.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VectorDataFetcher_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VectorDataFetcher.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VectorDataFetcher_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VectorDataFetcher.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VectorDataFetcher_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshGenerationBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshGenerationBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshGenerationBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshGenerationBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshGenerationBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshGenerationBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScriptablePalette.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScriptablePalette_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScriptablePalette.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScriptablePalette_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScriptablePalette.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScriptablePalette_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LineBuilder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineBuilder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LineBuilder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineBuilder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LineBuilder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LineBuilder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AudioAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AudioAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AudioAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BotonCambiarEscena.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BotonCambiarEscena_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BotonCambiarEscena.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BotonCambiarEscena_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BotonCambiarEscena.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BotonCambiarEscena_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraInstancer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraInstancer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraInstancer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraInstancer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraInstancer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraInstancer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cannon.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cannon_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cannon.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cannon_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cannon.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cannon_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Clock.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Clock_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Clock.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Clock_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Clock.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Clock_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockSound.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockSound_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ClockSound.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockSound_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ClockSound.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ClockSound_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VistaLinks.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VistaLinks_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VistaLinks.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VistaLinks_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VistaLinks.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VistaLinks_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExperienceToggler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExperienceToggler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ExperienceToggler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExperienceToggler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExperienceToggler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExperienceToggler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FaceCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FaceCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FaceCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FaceCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FaceCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FaceCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FadeOutObjects.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeOutObjects_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FadeOutObjects.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeOutObjects_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FadeOutObjects.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FadeOutObjects_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GameManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GameManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GestureManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GestureManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// GestureManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GestureManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// GestureManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void GestureManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RouteMaker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RouteMaker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// RouteMaker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RouteMaker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// RouteMaker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void RouteMaker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MenuSlider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSlider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MenuSlider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSlider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MenuSlider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSlider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshPlacer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshPlacer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshPlacer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshPlacer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshPlacer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshPlacer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NextScene.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextScene_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NextScene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextScene_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NextScene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextScene_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimedAnimation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimedAnimation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TimedAnimation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimedAnimation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimedAnimation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimedAnimation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CheckPermissions.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckPermissions_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CheckPermissions.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckPermissions_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CheckPermissions.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CheckPermissions_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Puente.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Puente_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Puente.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Puente_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Puente.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Puente_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleClamp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleClamp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleClamp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleClamp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScaleClamp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScaleClamp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SoundManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SoundManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SoundManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SoundManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SoundManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SoundManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SwipeRotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SwipeRotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SwipeRotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SwipeRotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SwipeRotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SwipeRotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextAnim.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextAnim_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TextAnim.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextAnim_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TextAnim.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TextAnim_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrackedImageSolver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrackedImageSolver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TrackedImageSolver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrackedImageSolver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrackedImageSolver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrackedImageSolver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnimTutorial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimTutorial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AnimTutorial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimTutorial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnimTutorial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnimTutorial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MonumentoUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MonumentoUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MonumentoUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MonumentoUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MonumentoUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MonumentoUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PopUp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PopUp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PopUp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PopUpInstancer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUpInstancer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PopUpInstancer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUpInstancer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PopUpInstancer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PopUpInstancer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIFollower.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIFollower_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIFollower.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIFollower_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIFollower.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIFollower_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Voz.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Voz_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Voz.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Voz_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Voz.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Voz_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnchorCreator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnchorCreator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AnchorCreator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnchorCreator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AnchorCreator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AnchorCreator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARFeatheredPlaneMeshVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARFeatheredPlaneMeshVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARFeatheredPlaneMeshVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARFeatheredPlaneMeshVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARFeatheredPlaneMeshVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARFeatheredPlaneMeshVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FoamController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FoamController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FoamController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FoamController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FoamController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FoamController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ParticulasUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticulasUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ParticulasUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticulasUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ParticulasUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ParticulasUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_DissolveOverTime.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_DissolveOverTime_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_DissolveOverTime.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_DissolveOverTime_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_DissolveOverTime.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_DissolveOverTime_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_ExampleReview.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_ExampleReview_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_ExampleReview.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_ExampleReview_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_ExampleReview.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_ExampleReview_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_MouseRotation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_MouseRotation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_MouseRotation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_MouseRotation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_MouseRotation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_MouseRotation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_SnowOverTime.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_SnowOverTime_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_SnowOverTime.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_SnowOverTime_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// U10PS_SnowOverTime.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void U10PS_SnowOverTime_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Plexus.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Plexus_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Plexus.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Plexus_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Plexus.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Plexus_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Reporter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Reporter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Reporter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Reporter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Reporter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Reporter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterMessageReceiver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterMessageReceiver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterMessageReceiver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterMessageReceiver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ReporterMessageReceiver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ReporterMessageReceiver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Rotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Rotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Rotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Rotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestReporter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestReporter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TestReporter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestReporter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestReporter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestReporter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Antialiasing.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Antialiasing_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Antialiasing.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Antialiasing_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Antialiasing.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Antialiasing_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Bloom.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Bloom_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Bloom.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Bloom_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Bloom.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Bloom_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomAndFlares_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomAndFlares_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomAndFlares.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomAndFlares_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomOptimized.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomOptimized_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomOptimized.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomOptimized_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BloomOptimized.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BloomOptimized_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Blur.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Blur_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Blur.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Blur_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Blur.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Blur_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BlurOptimized.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BlurOptimized_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BlurOptimized.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BlurOptimized_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.BlurOptimized.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_BlurOptimized_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CameraMotionBlur_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CameraMotionBlur_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CameraMotionBlur.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CameraMotionBlur_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionCurves_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionCurves_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionCurves.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionCurves_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionLookup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionLookup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionLookup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionLookup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionRamp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionRamp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ColorCorrectionRamp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ColorCorrectionRamp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastEnhance_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastEnhance_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastEnhance.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastEnhance_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastStretch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastStretch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastStretch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastStretch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ContrastStretch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ContrastStretch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CreaseShading.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CreaseShading_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CreaseShading.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CreaseShading_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.CreaseShading.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_CreaseShading_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfFieldDeprecated_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfFieldDeprecated_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.DepthOfFieldDeprecated.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_DepthOfFieldDeprecated_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.EdgeDetection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_EdgeDetection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.EdgeDetection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_EdgeDetection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.EdgeDetection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_EdgeDetection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Fisheye.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Fisheye_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Fisheye.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Fisheye_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Fisheye.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Fisheye_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Grayscale.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Grayscale_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Grayscale.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Grayscale_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Grayscale.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Grayscale_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ImageEffectBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ImageEffectBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ImageEffectBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ImageEffectBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.MotionBlur.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_MotionBlur_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.MotionBlur.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_MotionBlur_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.MotionBlur.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_MotionBlur_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndGrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndGrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndGrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndGrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndScratches_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndScratches_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.NoiseAndScratches.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_NoiseAndScratches_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_PostEffectsBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_PostEffectsBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.PostEffectsBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_PostEffectsBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenOverlay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenOverlay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenOverlay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenOverlay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenSpaceAmbientOcclusion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenSpaceAmbientOcclusion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.ScreenSpaceAmbientOcclusion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_ScreenSpaceAmbientOcclusion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SepiaTone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SepiaTone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SepiaTone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SepiaTone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SepiaTone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SepiaTone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SunShafts.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SunShafts_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SunShafts.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SunShafts_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.SunShafts.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_SunShafts_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Tonemapping.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Tonemapping_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Tonemapping.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Tonemapping_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Tonemapping.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Tonemapping_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Twirl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Twirl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Twirl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Twirl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Twirl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Twirl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_VignetteAndChromaticAberration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_VignetteAndChromaticAberration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.VignetteAndChromaticAberration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_VignetteAndChromaticAberration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Vortex.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Vortex_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Vortex.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Vortex_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.ImageEffects.Vortex.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_ImageEffects_Vortex_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.DisplayControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_DisplayControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.DisplayControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_DisplayControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.DisplayControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_DisplayControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_MobileWaterShader_EKV_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_MobileWaterShader_EKV_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.MobileWaterShader_EKV.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_MobileWaterShader_EKV_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SetValueOnStart.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SetValueOnStart_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SetValueOnStart.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SetValueOnStart_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SetValueOnStart.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SetValueOnStart_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SimpleRotation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SimpleRotation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SimpleRotation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SimpleRotation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.SimpleRotation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_SimpleRotation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.WaterControl_EKV.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_WaterControl_EKV_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.WaterControl_EKV.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_WaterControl_EKV_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MobileWaterShaderEKV.WaterControl_EKV.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MobileWaterShaderEKV_WaterControl_EKV_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LowPolyWater.LowPolyWater.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LowPolyWater_LowPolyWater_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LowPolyWater.LowPolyWater.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LowPolyWater_LowPolyWater_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LowPolyWater.LowPolyWater.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LowPolyWater_LowPolyWater_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Console.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Console_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Console.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Console_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Console.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Console_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DontDestroyOnLoad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DontDestroyOnLoad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DontDestroyOnLoad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DontDestroyOnLoad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_MapVisualizerPerformance_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_MapVisualizerPerformance_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.MapVisualizerPerformance.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_MapVisualizerPerformance_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_OpenUrlOnButtonClick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_OpenUrlOnButtonClick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.OpenUrlOnButtonClick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_OpenUrlOnButtonClick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Runnable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Runnable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Runnable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Runnable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.Runnable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_Runnable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_TelemetryConfigurationButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_TelemetryConfigurationButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.TelemetryConfigurationButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_TelemetryConfigurationButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_SceneData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_SceneData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.SceneData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_SceneData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_ScenesList_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_ScenesList_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Utilities.DebugTools.ScenesList.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Utilities_DebugTools_ScenesList_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_FeatureCollectionBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_FeatureCollectionBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.FeatureCollectionBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_FeatureCollectionBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_KdTreeCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_KdTreeCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.KdTreeCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_KdTreeCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_GameObjectModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_GameObjectModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.GameObjectModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_GameObjectModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddMonoBehavioursModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddMonoBehavioursModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddMonoBehavioursModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddMonoBehavioursModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddToCollectionModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddToCollectionModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.AddToCollectionModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_AddToCollectionModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ColliderModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ColliderModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ColliderModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ColliderModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_DisableMeshRendererModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_DisableMeshRendererModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.DisableMeshRendererModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_DisableMeshRendererModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_FeatureBehaviourModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_FeatureBehaviourModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.FeatureBehaviourModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_FeatureBehaviourModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LayerModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LayerModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LayerModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LayerModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MapboxStylesColorModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MapboxStylesColorModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MapboxStylesColorModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MapboxStylesColorModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MaterialModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MaterialModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MaterialModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MaterialModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_NoiseOffsetModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_NoiseOffsetModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.NoiseOffsetModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_NoiseOffsetModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PrefabModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PrefabModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PrefabModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PrefabModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SpawnInsideModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SpawnInsideModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SpawnInsideModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SpawnInsideModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TagModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TagModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TagModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TagModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureMonoBehaviourModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureMonoBehaviourModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureMonoBehaviourModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureMonoBehaviourModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MergedModifierStack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MergedModifierStack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MergedModifierStack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MergedModifierStack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MeshModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MeshModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.MeshModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_MeshModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ChamferHeightModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ChamferHeightModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ChamferHeightModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ChamferHeightModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_HeightModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_HeightModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.HeightModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_HeightModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LineMeshModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LineMeshModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LineMeshModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LineMeshModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LoftModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LoftModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.LoftModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_LoftModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PolygonMeshModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PolygonMeshModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.PolygonMeshModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_PolygonMeshModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureCollectionModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureCollectionModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureCollectionModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureCollectionModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ReplaceFeatureModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ReplaceFeatureModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SmoothLineModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SmoothLineModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SmoothLineModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SmoothLineModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainRaycastModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainRaycastModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.SnapTerrainRaycastModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_SnapTerrainRaycastModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_UvModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_UvModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.UvModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_UvModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStackBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStackBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.ModifierStackBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_ModifierStackBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureSideWallModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureSideWallModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Modifiers.TextureSideWallModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Modifiers_TextureSideWallModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_LocationPrefabsLayerVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_LocationPrefabsLayerVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.LocationPrefabsLayerVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_LocationPrefabsLayerVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_VectorLayerVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_VectorLayerVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Interfaces.VectorLayerVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Interfaces_VectorLayerVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_DirectionsFactory_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_DirectionsFactory_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.DirectionsFactory.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_DirectionsFactory_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_MapImageFactory_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_MapImageFactory_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.MapImageFactory.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_MapImageFactory_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_TerrainFactoryBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_TerrainFactoryBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.TerrainFactoryBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_TerrainFactoryBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_VectorTileFactory_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_VectorTileFactory_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Factories.VectorTileFactory.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Factories_VectorTileFactory_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_AtlasInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_AtlasInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.AtlasInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_AtlasInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_UnityTile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_UnityTile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Data.UnityTile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Data_UnityTile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_FeatureBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_FeatureBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.FeatureBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_FeatureBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_TextureSelector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_TextureSelector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.TextureSelector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_TextureSelector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebugger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebugger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebugger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebugger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebuggerGizmo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebuggerGizmo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.MeshGeneration.Components.VertexDebuggerGizmo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_MeshGeneration_Components_VertexDebuggerGizmo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingAverage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingAverage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingAverage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingAverage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingAverage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingAverage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingEMA.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingEMA_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingEMA.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingEMA_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingEMA.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingEMA_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingLowPass_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingLowPass_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingLowPass.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingLowPass_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingNoOp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingNoOp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.AngleSmoothingNoOp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_AngleSmoothingNoOp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProviderAndroidNative_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProviderAndroidNative_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.DeviceLocationProviderAndroidNative.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_DeviceLocationProviderAndroidNative_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProviderLocationLog_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProviderLocationLog_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.EditorLocationProviderLocationLog.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_EditorLocationProviderLocationLog_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationArrayEditorLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationArrayEditorLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationArrayEditorLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationArrayEditorLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationProviderFactory.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationProviderFactory_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationProviderFactory.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationProviderFactory_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.LocationProviderFactory.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_LocationProviderFactory_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.TransformLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_TransformLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.TransformLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_TransformLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Location.TransformLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Location_TransformLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_UpdateMapWithLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_UpdateMapWithLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.UpdateMapWithLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_UpdateMapWithLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.AbstractMap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_AbstractMap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.AbstractMap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_AbstractMap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.AbstractMap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_AbstractMap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_InitializeMapWithLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_InitializeMapWithLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.InitializeMapWithLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_InitializeMapWithLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.MapVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_MapVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.MapVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_MapVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.MapVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_MapVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_GlobeTileProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_GlobeTileProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.GlobeTileProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_GlobeTileProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeMapVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeMapVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeMapVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeMapVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeTileProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeTileProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.QuadTreeTileProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_QuadTreeTileProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeAroundTransformTileProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeAroundTransformTileProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeAroundTransformTileProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeAroundTransformTileProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeTileProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeTileProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.RangeTileProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_RangeTileProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_TileErrorHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_TileErrorHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Unity.Map.TileProviders.TileErrorHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Unity_Map_TileProviders_TileErrorHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightBuildings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightBuildings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightBuildings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightBuildings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightBuildings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightBuildings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TextMeshOutline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TextMeshOutline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TextMeshOutline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TextMeshOutline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TextMeshOutline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TextMeshOutline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautDirections.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautDirections_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautDirections.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautDirections_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautDirections.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautDirections_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautMouseController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautMouseController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautMouseController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautMouseController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.AstronautMouseController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_AstronautMouseController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CharacterMovement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CharacterMovement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CharacterMovement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CharacterMovement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CharacterMovement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CharacterMovement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.POIPlacementScriptExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_POIPlacementScriptExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.POIPlacementScriptExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_POIPlacementScriptExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.POIPlacementScriptExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_POIPlacementScriptExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnMap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnMap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnMap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnMap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnMap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnMap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnGlobeExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnGlobeExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnGlobeExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnGlobeExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.SpawnOnGlobeExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_SpawnOnGlobeExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraBillboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraBillboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraBillboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraBillboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraBillboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraBillboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraMovement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraMovement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraMovement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraMovement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.CameraMovement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_CameraMovement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ChangeShadowDistance.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ChangeShadowDistance_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ChangeShadowDistance.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ChangeShadowDistance_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ChangeShadowDistance.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ChangeShadowDistance_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.DragableDirectionWaypoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_DragableDirectionWaypoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.DragableDirectionWaypoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_DragableDirectionWaypoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.DragableDirectionWaypoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_DragableDirectionWaypoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureSelectionDetector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureSelectionDetector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureSelectionDetector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureSelectionDetector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureSelectionDetector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureSelectionDetector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureUiMarker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureUiMarker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureUiMarker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureUiMarker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.FeatureUiMarker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_FeatureUiMarker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ForwardGeocodeUserInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ForwardGeocodeUserInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ForwardGeocodeUserInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ForwardGeocodeUserInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ForwardGeocodeUserInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ForwardGeocodeUserInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HeroBuildingSelectionUserInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HeroBuildingSelectionUserInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HeroBuildingSelectionUserInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HeroBuildingSelectionUserInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightFeature.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightFeature_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightFeature.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightFeature_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.HighlightFeature.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_HighlightFeature_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ImmediatePositionWithLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ImmediatePositionWithLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ImmediatePositionWithLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ImmediatePositionWithLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LabelTextSetter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LabelTextSetter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LabelTextSetter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LabelTextSetter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LabelTextSetter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LabelTextSetter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LoadingPanelController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LoadingPanelController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LoadingPanelController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LoadingPanelController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LoadingPanelController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LoadingPanelController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LocationStatus.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LocationStatus_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LocationStatus.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LocationStatus_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.LocationStatus.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_LocationStatus_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.MakiHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_MakiHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.MakiHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_MakiHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.MakiHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_MakiHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ObjectInspectorModifier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ObjectInspectorModifier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ObjectInspectorModifier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ObjectInspectorModifier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ObjectInspectorModifier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ObjectInspectorModifier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiLabelTextSetter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiLabelTextSetter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiLabelTextSetter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiLabelTextSetter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiLabelTextSetter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiLabelTextSetter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiMarkerHelper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiMarkerHelper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiMarkerHelper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiMarkerHelper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PoiMarkerHelper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PoiMarkerHelper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PositionWithLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PositionWithLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PositionWithLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PositionWithLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.PositionWithLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_PositionWithLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.QuadTreeCameraMovement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_QuadTreeCameraMovement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.QuadTreeCameraMovement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_QuadTreeCameraMovement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.QuadTreeCameraMovement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_QuadTreeCameraMovement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReloadMap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReloadMap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReloadMap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReloadMap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReloadMap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReloadMap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReverseGeocodeUserInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReverseGeocodeUserInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReverseGeocodeUserInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReverseGeocodeUserInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.ReverseGeocodeUserInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_ReverseGeocodeUserInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.RotateWithLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_RotateWithLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.RotateWithLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_RotateWithLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.RotateWithLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_RotateWithLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TrafficUvAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TrafficUvAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TrafficUvAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TrafficUvAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.TrafficUvAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_TrafficUvAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Voxels.VoxelFetcher.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Voxels_VoxelFetcher_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Voxels.VoxelFetcher.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Voxels_VoxelFetcher_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Voxels.VoxelFetcher.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Voxels_VoxelFetcher_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.LogLocationProviderData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_LogLocationProviderData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.LogLocationProviderData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_LogLocationProviderData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.LogLocationProviderData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_LogLocationProviderData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_Utilities_DragRotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_Utilities_DragRotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Scripts.Utilities.DragRotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Scripts_Utilities_DragRotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.DirectionsExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_DirectionsExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.DirectionsExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_DirectionsExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.DirectionsExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_DirectionsExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ForwardGeocoderExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ForwardGeocoderExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ForwardGeocoderExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ForwardGeocoderExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.RasterTileExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_RasterTileExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.RasterTileExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_RasterTileExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.RasterTileExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_RasterTileExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ReverseGeocoderExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ReverseGeocoderExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.ReverseGeocoderExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_ReverseGeocoderExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.VectorTileExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_VectorTileExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.VectorTileExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_VectorTileExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Mapbox.Examples.Playground.VectorTileExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Mapbox_Examples_Playground_VectorTileExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.NewPathLineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_NewPathLineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.NewPathLineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_NewPathLineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.NewPathLineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_NewPathLineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilderApplicationController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilderApplicationController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilderApplicationController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilderApplicationController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldBuilderApplicationController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldBuilderApplicationController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldVoxelController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldVoxelController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldVoxelController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldVoxelController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WorldVoxelController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WorldVoxelController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationOrientation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationOrientation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationOrientation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationOrientation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationOrientation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationOrientation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.GroundHeight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_GroundHeight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.GroundHeight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_GroundHeight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.GroundHeight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_GroundHeight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Hotspot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Hotspot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Hotspot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Hotspot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Hotspot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Hotspot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MoveAlongPath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MoveAlongPath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MoveAlongPath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MoveAlongPath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MoveAlongPath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MoveAlongPath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAlongPath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAlongPath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAlongPath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAlongPath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAlongPath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAlongPath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocations.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocations_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocations.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocations_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PlaceAtLocations.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PlaceAtLocations_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.RenderPathLine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_RenderPathLine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.RenderPathLine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_RenderPathLine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.RenderPathLine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_RenderPathLine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WebMapLoader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WebMapLoader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WebMapLoader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WebMapLoader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.WebMapLoader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_WebMapLoader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationConfig.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationConfig_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationConfig.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationConfig_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.ARLocationConfig.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_ARLocationConfig_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationPath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationPath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationPath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationPath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.LocationPath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_LocationPath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PrefabDatabase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PrefabDatabase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PrefabDatabase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PrefabDatabase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.PrefabDatabase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_PrefabDatabase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_CreatePointOfInterestTextMeshes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_CreatePointOfInterestTextMeshes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.CreatePointOfInterestTextMeshes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_CreatePointOfInterestTextMeshes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DebugCanvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DebugCanvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DebugCanvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DebugCanvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DebugCanvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DebugCanvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DevCameraController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DevCameraController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DevCameraController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DevCameraController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.DevCameraController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_DevCameraController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FaceCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FaceCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FaceCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FaceCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FaceCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FaceCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FadeOutTextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FadeOutTextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FadeOutTextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FadeOutTextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FadeOutTextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FadeOutTextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FollowCameraPosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FollowCameraPosition_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FollowCameraPosition.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FollowCameraPosition_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.FollowCameraPosition.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_FollowCameraPosition_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.RotateObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_RotateObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.RotateObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_RotateObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.RotateObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_RotateObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SelectScene.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SelectScene_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SelectScene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SelectScene_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SelectScene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SelectScene_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_ShowHideSelfOnPointerClick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_ShowHideSelfOnPointerClick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.ShowHideSelfOnPointerClick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_ShowHideSelfOnPointerClick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SmoothMove.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SmoothMove_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SmoothMove.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SmoothMove_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.Utils.SmoothMove.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_Utils_SmoothMove_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.ARTrackingInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_ARTrackingInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.ARTrackingInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_ARTrackingInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.ARTrackingInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_ARTrackingInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugDistance.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugDistance_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugDistance.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugDistance_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugDistance.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugDistance_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugInfoOverlay.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugInfoOverlay_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugInfoOverlay.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugInfoOverlay_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.DebugInfoOverlay.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_DebugInfoOverlay_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LoadingBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LoadingBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LoadingBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LoadingBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LoadingBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LoadingBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LocationProviderInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LocationProviderInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LocationProviderInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LocationProviderInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.LocationProviderInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_LocationProviderInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.OrientationInfo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_OrientationInfo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.OrientationInfo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_OrientationInfo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.UI.OrientationInfo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_UI_OrientationInfo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.CustomRoute.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_CustomRoute_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.CustomRoute.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_CustomRoute_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.CustomRoute.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_CustomRoute_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_DefaultOnScreenTargetIndicator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_DefaultOnScreenTargetIndicator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.DefaultOnScreenTargetIndicator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_DefaultOnScreenTargetIndicator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.MapboxRoute.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_MapboxRoute_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.MapboxRoute.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_MapboxRoute_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.MapboxRoute.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_MapboxRoute_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_NextStepRoutePathRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_NextStepRoutePathRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.NextStepRoutePathRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_NextStepRoutePathRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.PathRouteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_PathRouteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.PathRouteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_PathRouteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.PathRouteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_PathRouteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SignPost.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SignPost_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SignPost.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SignPost_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SignPost.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SignPost_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_ArMenuController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_ArMenuController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.ArMenuController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_ArMenuController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_DirectionsFactory_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_DirectionsFactory_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.DirectionsFactory.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_DirectionsFactory_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_MenuController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_MenuController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.SampleProject.MenuController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_SampleProject_MenuController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_ArMenuController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_ArMenuController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.ArMenuController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_ArMenuController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_MenuController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_MenuController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ARLocation.MapboxRoutes.Examples.Search.MenuController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ARLocation_MapboxRoutes_Examples_Search_MenuController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_CamNav.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_CamNav_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_CamNav.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_CamNav_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_CamNav.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_CamNav_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Reflection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Reflection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Reflection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Reflection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AQUAS_Lite.AQUAS_Lite_Reflection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AQUAS_Lite_AQUAS_Lite_Reflection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpatialTracking.TrackedPoseDriver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Space arg3 = default(global::UnityEngine.Space);
			target.Rotate(arg0, arg1, arg2, arg3);
			global::Unity.VisualScripting.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.FindWithTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_FindWithTag()
		{
			string arg0 = default(string);
			global::UnityEngine.GameObject.FindWithTag(arg0);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, UnityEngine.GameObject> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, UnityEngine.GameObject>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_ctor()
		{
			new UnityEngine.Camera();
		}
	}
}
